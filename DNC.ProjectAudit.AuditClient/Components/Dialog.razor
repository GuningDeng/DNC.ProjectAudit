@code {
    [Parameter] public bool Visible { get; set; }
    [Parameter] public EventCallback<bool> VisibleChanged { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnConfirm { get; set; }

    private async Task Close()
    {
        await OnClose.InvokeAsync(null);
        await VisibleChanged.InvokeAsync(false);
    }
}

@if (Visible)
{
    <div class="modal" tabindex="-1" role="dialog" style="display:block;background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" @onclick="Close">                        
                    </button>
                </div>
                <div class="modal-body">
                    @ChildContent
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" @onclick="OnConfirm">Bevestigen</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
}
