// <auto-generated />
using System;
using DNC.ProjectAudit.Infrastructure.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DNC.ProjectAudit.Infrastructure.Migrations
{
    [DbContext(typeof(DNCProjectAuditContext))]
    [Migration("20241229113135_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprovedByProjetManagerId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("DeletedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStarted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("QuestionnaireAuditorId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("SubmissionDeadline")
                        .HasColumnType("datetime");

                    b.Property<string>("SubmittedBySupervisorsText")
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("QuestionnaireAuditorId");

                    b.ToTable("tblAuditQuestionnaire", "AuditQuestionnaire");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApprovedByProjetManagerId = 0,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 12, 29, 12, 31, 35, 132, DateTimeKind.Local).AddTicks(5020),
                            DeletedBy = 0,
                            Description = "DNC, Project name, Region",
                            IsCompleted = false,
                            IsStarted = false,
                            Name = "DNC_BlueLine_Brussele",
                            Region = "Brussels",
                            SubmissionDeadline = new DateTime(2025, 1, 5, 12, 31, 35, 132, DateTimeKind.Local).AddTicks(5066),
                            UpdatedBy = 0
                        },
                        new
                        {
                            Id = 2,
                            ApprovedByProjetManagerId = 0,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2024, 12, 29, 12, 31, 35, 132, DateTimeKind.Local).AddTicks(5071),
                            DeletedBy = 0,
                            Description = "DNC, Project name, Region",
                            IsCompleted = false,
                            IsStarted = false,
                            Name = "DNC_RedLine_Brussele",
                            Region = "Antwerp",
                            SubmissionDeadline = new DateTime(2025, 1, 5, 12, 31, 35, 132, DateTimeKind.Local).AddTicks(5072),
                            UpdatedBy = 0
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.MultipleChoiceQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(32)");

                    b.Property<bool?>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("PriorityIndication")
                        .HasColumnType("int");

                    b.Property<int>("QuestionAuditQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("QuestionAuditQuestionnaireId");

                    b.ToTable("tblMultipleChoiceQuestion", "MultipleChoiceQuestion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            OptionText = "BBA;BASF;HoutVlaanderen",
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "Materiaalleverancier voor dit project:"
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            OptionText = "EU;België;Antwerpen;Brussel;Gent;Luik;Andere regions",
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "De regio waar de materiaalleverancier van dit project gevestigd is"
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.OpenQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool?>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<int>("PriorityIndication")
                        .HasColumnType("int");

                    b.Property<int>("QuestionAuditQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("QuestionAuditQuestionnaireId");

                    b.ToTable("tblOpenQuestion", "OpenQuestion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "Beschrijf uw missie."
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "Beschrijf het project."
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.SelectListQuestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .HasColumnType("nvarchar(2048)");

                    b.Property<bool?>("IsDisplay")
                        .HasColumnType("bit");

                    b.Property<string>("OptionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("PriorityIndication")
                        .HasColumnType("int");

                    b.Property<int>("QuestionAuditQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("QuestionAuditQuestionnaireId");

                    b.ToTable("tblSelectListQuestion", "SelectListQuestion");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            OptionText = "S235;S275;S355",
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "Staalsoort gebruikt in project:"
                        },
                        new
                        {
                            Id = 2,
                            AnswerText = "NoValue",
                            IsDisplay = true,
                            OptionText = "Wagen;Vrachtwagen;Aanhangwagen;Bus",
                            PriorityIndication = 1,
                            QuestionAuditQuestionnaireId = 1,
                            QuestionText = "Type transportvoertuig dat in het project wordt gebruikt:"
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.Auditor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("tblAuditor", "Auditor");

                    b.HasData(
                        new
                        {
                            Id = 2,
                            Email = "janjanssen@dnc.com",
                            FirstName = "Jan",
                            IsActive = true,
                            LastName = "Janssen",
                            MobilePhone = "+32488222333",
                            OfficePhone = "+32222222",
                            Role = "Auditor"
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.CEO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssistantPhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("tblCEO", "CEO");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AssistantPhone = "+32111999",
                            Email = "guningdeng@dnc.com",
                            FirstName = "Guning",
                            IsActive = true,
                            LastName = "Deng",
                            MobilePhone = "+32486333888",
                            OfficePhone = "+32111111",
                            Phone = "+32222222",
                            Role = "CEO"
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.ProjectManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ProjectManagerAuditQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ProjectManagerAuditQuestionnaireId")
                        .IsUnique();

                    b.ToTable("tblProjectManager", "ProjectManager");

                    b.HasData(
                        new
                        {
                            Id = 3,
                            Email = "brunopeeters@dnc.com",
                            FirstName = "Bruno",
                            IsActive = true,
                            LastName = "Peeters",
                            MobilePhone = "+32486111333",
                            OfficePhone = "+32333222",
                            ProjectManagerAuditQuestionnaireId = 1,
                            Region = "Brussels",
                            Role = "ProjectManager"
                        },
                        new
                        {
                            Id = 4,
                            Email = "aanvananders@dnc.com",
                            FirstName = "Aan",
                            IsActive = true,
                            LastName = "van Anders",
                            MobilePhone = "+32486111555",
                            OfficePhone = "+32333555",
                            ProjectManagerAuditQuestionnaireId = 2,
                            Region = "Antwerp",
                            Role = "ProjectManager"
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.Supervisor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("MobilePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("OfficePhone")
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("SupervisorAuditQuestionnaireId")
                        .HasColumnType("int");

                    b.Property<int>("SupervisorProjectManagerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("SupervisorAuditQuestionnaireId");

                    b.HasIndex("SupervisorProjectManagerId");

                    b.ToTable("tblSupervisor", "Supervisor");

                    b.HasData(
                        new
                        {
                            Id = -2,
                            Email = "christbrown@dnc.com",
                            FirstName = "Christ",
                            IsActive = true,
                            LastName = "Brown",
                            MobilePhone = "+32486555222",
                            OfficePhone = "+32555333",
                            Region = "Brussels",
                            Role = "Supervisor",
                            SupervisorProjectManagerId = 3
                        });
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.Person.Auditor", "QuestionnaireAuditor")
                        .WithMany("Questionnaires")
                        .HasForeignKey("QuestionnaireAuditorId");

                    b.Navigation("QuestionnaireAuditor");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.MultipleChoiceQuestion", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", "QuestionAuditQuestionnaire")
                        .WithMany("MultipleChoiceQuestions")
                        .HasForeignKey("QuestionAuditQuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionAuditQuestionnaire");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.OpenQuestion", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", "QuestionAuditQuestionnaire")
                        .WithMany("OpenQuestions")
                        .HasForeignKey("QuestionAuditQuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionAuditQuestionnaire");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.Questions.SelectListQuestion", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", "QuestionAuditQuestionnaire")
                        .WithMany("SelectListQuestions")
                        .HasForeignKey("QuestionAuditQuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QuestionAuditQuestionnaire");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.ProjectManager", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", "ProjectManagerAuditQuestionnaire")
                        .WithOne("QuestionnaireProjectManager")
                        .HasForeignKey("DNC.ProjectAudit.Domain.Entities.Person.ProjectManager", "ProjectManagerAuditQuestionnaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProjectManagerAuditQuestionnaire");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.Supervisor", b =>
                {
                    b.HasOne("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", "SupervisorAuditQuestionnaire")
                        .WithMany("Supervisors")
                        .HasForeignKey("SupervisorAuditQuestionnaireId");

                    b.HasOne("DNC.ProjectAudit.Domain.Entities.Person.ProjectManager", "SupervisorProjectManager")
                        .WithMany("ProjectManagerSupervisors")
                        .HasForeignKey("SupervisorProjectManagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupervisorAuditQuestionnaire");

                    b.Navigation("SupervisorProjectManager");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.AuditManagement.AuditQuestionnaire", b =>
                {
                    b.Navigation("MultipleChoiceQuestions");

                    b.Navigation("OpenQuestions");

                    b.Navigation("QuestionnaireProjectManager");

                    b.Navigation("SelectListQuestions");

                    b.Navigation("Supervisors");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.Auditor", b =>
                {
                    b.Navigation("Questionnaires");
                });

            modelBuilder.Entity("DNC.ProjectAudit.Domain.Entities.Person.ProjectManager", b =>
                {
                    b.Navigation("ProjectManagerSupervisors");
                });
#pragma warning restore 612, 618
        }
    }
}
